//
//  OKCreateSelectWalletTypeController.m
//  OneKey
//
//  Created by xiaoliang on 2020/10/19.
//  Copyright Â© 2020 OneKey. All rights reserved..
//

#import "OKCreateSelectWalletTypeController.h"
#import "OKCreateSelectWalletTypeCell.h"
#import "OKCreateSelectWalletTypeModel.h"
#import "OKSelectCoinTypeViewController.h"

@interface OKCreateSelectWalletTypeController ()<UITableViewDelegate,UITableViewDataSource>
@property (weak, nonatomic) IBOutlet UILabel *titleLabel;
@property (nonatomic,strong)NSArray *walletTypeListArray;

@property (weak, nonatomic) IBOutlet UITableView *tableView;

@end

@implementation OKCreateSelectWalletTypeController

+ (instancetype)createSelectWalletTypeController
{
    return [[UIStoryboard storyboardWithName:@"WalletList" bundle:nil]instantiateViewControllerWithIdentifier:@"OKCreateSelectWalletTypeController"];
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = MyLocalizedString(@"Create a wallet", nil);
    self.titleLabel.text = MyLocalizedString(@"Select wallet Type", nil);
    self.tableView.tableFooterView = [UIView new];
}

#pragma mark - UITableViewDelegate | UITableViewDataSource
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.walletTypeListArray.count;
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *ID = @"OKCreateSelectWalletTypeCell";
    OKCreateSelectWalletTypeCell *cell = [tableView dequeueReusableCellWithIdentifier:ID];
    if (cell == nil) {
        cell = [[OKCreateSelectWalletTypeCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:ID];
    }
    cell.model = self.walletTypeListArray[indexPath.row];
    return cell;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    OKCreateSelectWalletTypeModel *model = self.walletTypeListArray[indexPath.row];
    OKSelectCoinTypeViewController *selectVc = [OKSelectCoinTypeViewController selectCoinTypeViewController];
    selectVc.addType = model.addtype;
    [self.navigationController pushViewController:selectVc animated:YES];
}


- (NSArray *)walletTypeListArray
{
    if (!_walletTypeListArray) {
        
        OKCreateSelectWalletTypeModel *model = [OKCreateSelectWalletTypeModel new];
        model.createWalletType = MyLocalizedString(@"Derivations based on HD Root Mnemonics (recommended)", nil);
        model.iconName = @"id_wallet";
        model.tipsString = MyLocalizedString(@"With the HD logo, derived from the wallet root mnemonic (the mnemonic you copied when you first created your wallet), a mnemonic can create an infinite number of wallets in multiple currencies. It can also be used to recover all derived wallets, save time, effort and security, is the core bitcoin protocol BIP44 implementation", nil);
        model.addtype = OKAddTypeCreateHDDerived;
        
        OKCreateSelectWalletTypeModel *model1 = [OKCreateSelectWalletTypeModel new];
        model1.createWalletType = MyLocalizedString(@"Independent wallet", nil);
        model1.iconName = @"solo_wallet";
        model1.tipsString = MyLocalizedString(@"A separate wallet with a separate private key generated by a local encryption algorithm. You need to re-copy mnemonics, and everything is not Shared with HD Wallet", nil);
        model1.addtype = OKAddTypeCreateSolo;
        if (_haveHD) {
            _walletTypeListArray = @[model,model1];
        }else{
            _walletTypeListArray = @[model1];
        }
    }
    return _walletTypeListArray;
}

@end
